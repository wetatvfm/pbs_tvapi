<?php
/**
 * @file
 * PBS TV API module.
 */


/**
 * Implements hook_permission().
 */
function pbs_tvapi_permission() {
  return array(
    'administer tvapi' => array(
      'title' => t('Add and update PBS Schedule key and settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 * @see menu_example()
 */
function pbs_tvapi_menu() {

  $items['admin/config/services/tvschedule_api'] = array(
    'title' => 'PBS TV Schedules API',
    'description' => 'Manage settings for the PBS TV Schedules API',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pbs_tvapi_admin_site_settings'),
    'access arguments' => array('administer tvapi'),
    'file' => 'pbs_tvapi.admin.inc',
  );

  $items['admin/config/services/tvschedule_api/test'] = array(
    'title' => 'PBS TV Schedules API Test Page',
    'description' => 'Test the results from PBS TV Schedules API',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pbs_tvapi_admin_tests'),
    'access arguments' => array('administer tvapi'),
    'file' => 'pbs_tvapi.admin.inc',
  );
  return $items;
}

/**
 * Gets configuration settings.
 *
 * @return array
 *   Associative array of config settings (api_key, callsign).
 */
function pbs_tvapi_get_config() {
  $config = &drupal_static(__FUNCTION__);

  if (!isset($config)) {
    $config = array(
      'api_key' => variable_get('pbs_tvapi_key'),
      'callsign' => variable_get('pbs_tvapi_callsign'),
      'timeout' => variable_get('pbs_tvapi_timeout'),
    );
  }

  return $config;
}



/*
 * Basic API call
 * @method = the method being called
 * @params = a string containing the parameter
 */
function pbs_tvapi_call2($method, $params = NULL, $api_key = NULL, $callsign = NULL) {
  $baseurl = 'http://services.pbs.org/tvss/';

  // get api key and callsign
  $config = pbs_tvapi_get_config();
  $api_key = (empty($api_key)) ? $config['api_key'] : $api_key;
  $callsign = (empty($callsign)) ? $config['callsign'] : $callsign;
  $timeout = (empty($config['timeout'])) ? '15' : $config['timeout'];

  // callsign should be all lower case
  $callsign = drupal_strtolower($callsign);

  $headers = array('X-PBSAUTH' => $api_key);

  $opts = array(
    'method' => 'GET',
    'headers' => $headers,
    'timeout' => $timeout,
  );


  // construct the API request
  $url = $baseurl . $callsign . '/' . $method . '/';
  if (!empty($params)) {
    $url .= $params . '/';
  }

  // query the API
  $results = drupal_http_request($url, $opts);

  if ($results->code > 400 ) {
    drupal_set_message(t('PBS TV Schedule API unable to connect response code: @code', array('@code' => $results->code)), 'error', FALSE);
    return NULL;
  }

  // decode JSON
  if (!empty($results)) {
    $scheduledata = json_decode($results->data, TRUE);

    // if there's an issue, display the error
    // otherwise return the results
    if (is_null($scheduledata)) {
      drupal_set_message(t('PBS Schedule API was unable to decode response.'), 'warning', TRUE);
      return NULL;
    }
    else {
      return $scheduledata;
    }
  }
  else {
    return NULL;
  }
}

/**
 * Jumping through hoops to create a unique identifier that spans shows
 * and programs since there is none in V2 of the API
 */
function pbs_tvapi_getindex($episode = array()) {
  $ep_id = '';
  if (isset($episode['program_id']) && !empty($episode['program_id'])) {
    $ep_id = $episode['program_id'];
  }
  elseif (isset($episode['show_id']) && !empty($episode['show_id'])) {
    $ep_id = $episode['show_id'];
  }

  return $ep_id;
}



